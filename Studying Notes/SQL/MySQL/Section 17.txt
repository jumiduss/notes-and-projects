Instagram Database Clone Project Start

Schema Design
    Tables:
        users
            id
            username
            created_at
        photos
            id
            img_url
            user_id
            created_at
        comments
            id
            comment_text
            user_id
            photo_id
            created_at
        likes
            user_id
            photo_id
            created_at
        follows
            follower_id
            following_id
            created_at
        hashtags
        
            Solution 1: 
                id
                image_url
                caption
                tags
            
                Pro / Con of this solution?
                    Easy to implement
                    limited number of tags
                    no additional information
                    harder to search for
        
            Solution 2:
                Add a caption column to photos and a tags table with
                    tag_name
                    photo_id
                Pro / Con of this solution?
                    Unlimited tags
                    Slower than number 1
            
            Solution 3:
                Add a caption to photos, and two tables.
                    tags:
                        id
                        tag_name
                    photo_tags:
                        photo_id
                        tag_id
                Pro / Con of this solution?
                    Unlimited tags
                    Can add additional information
                    Larger maintenance cost
                    Conflicts due to orphan relationships
        
    Database Creation

        CREATE TABLE users (
            id INTEGER AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(255) UNIQUE NOT NULL,
            created_at TIMESTAMP DEFAULT NOW()
        );

        CREATE TABLE photos (
            id INTEGER AUTO_INCREMENT PRIMARY KEY,
            image_url VARCHAR(255) NOT NULL,
            user_id INTEGER NOT NULL,
            created_at TIMESTAMP DEFAULT NOW(),
            FOREIGN KEY(user_id) REFERENCES users(id)
        );

        CREATE TABLE comments (
            id INTEGER AUTO_INCREMENT PRIMARY KEY,
            comment_text VARCHAR(255) NOT NULL,
            photo_id INTEGER NOT NULL,
            user_id INTEGER NOT NULL,
            created_at TIMESTAMP DEFAULT NOW(),
            FOREIGN KEY(photo_id) REFERENCES photos(id),
            FOREIGN KEY(user_id) REFERENCES users(id)
        );

        CREATE TABLE likes (
            user_id INTEGER NOT NULL,
            photo_id INTEGER NOT NULL,
            created_at TIMESTAMP DEFAULT NOW(),
            FOREIGN KEY(user_id) REFERENCES users(id),
            FOREIGN KEY(photo_id) REFERENCES photos(id),
            PRIMARY KEY(user_id, photo_id)
        );

        CREATE TABLE follows (
            follower_id INTEGER NOT NULL,
            followee_id INTEGER NOT NULL,
            created_at TIMESTAMP DEFAULT NOW(),
            FOREIGN KEY(follower_id) REFERENCES users(id),
            FOREIGN KEY(followee_id) REFERENCES users(id),
            PRIMARY KEY(follower_id, followee_id)
        );

        CREATE TABLE tags (
        id INTEGER AUTO_INCREMENT PRIMARY KEY,
        tag_name VARCHAR(255) UNIQUE,
        created_at TIMESTAMP DEFAULT NOW()
        );

        CREATE TABLE photo_tags (
            photo_id INTEGER NOT NULL,
            tag_id INTEGER NOT NULL,
            FOREIGN KEY(photo_id) REFERENCES photos(id),
            FOREIGN KEY(tag_id) REFERENCES tags(id),
            PRIMARY KEY(photo_id, tag_id)
        );

Inserting Data
